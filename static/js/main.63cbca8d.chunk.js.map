{"version":3,"sources":["Services/Constants.js","Services/Api-service.js","Services/Notification.js","Components/SearchBar/SearchBar.styled.jsx","Components/SearchBar/SearchBar.jsx","Components/ImageGalleryItem/ImageGalleryItem.styled.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.styled.jsx","Components/ImageGallery/ImageGallery.jsx","Components/LoadMoreButton/LoadMoreButton.styled.jsx","Components/LoadMoreButton/LoadMoreButton.jsx","Components/Spinner/Spinner.styled.jsx","Components/Spinner/Spinner.jsx","Components/Modal/Modal.styled.jsx","Components/Modal/Modal.jsx","App.jsx","index.js"],"names":["Pixabay","axios","defaults","baseURL","Api","searchQuery","page","url","get","data","hits","onInfoNotification","info","title","text","delay","Header","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchBar","state","handleInputChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","Item","Image","ImageGalleryItem","tags","previewImg","selectedImage","src","alt","onClick","List","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","LoadMoreButton","LoaderContainer","Spinner","color","height","width","ModalOverlay","ModalContainer","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","selectedImg","createPortal","App","status","handleFormSubmit","resetState","loadMoreBtnClick","prevState","handleSelectedImage","largeImageUrl","closeModal","_","a","getImages","length","Error","error","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"2SAAaA,EACD,2BADCA,EAEN,qCCCPC,IAAMC,SAASC,QAAUH,EAElB,IAAMI,EAAb,qIACE,WAAuBC,EAAaC,GAApC,kFACQC,EADR,aACoBF,EADpB,iBACwCC,EADxC,gBACoDN,EADpD,2EAGyBC,IAAMO,IAAID,GAHnC,uBAGUE,EAHV,EAGUA,KAHV,kBAKSA,EAAKC,MALd,2CADF,gE,QCAaC,G,kBAAqB,WAChCC,eAAK,CACHC,MAAO,kBACPC,KAAK,6BACLC,MAAO,Q,OCPJ,IAAMC,EAAM,gbAoBNC,EAAU,sLAUVC,EAAgB,oYAkBhBC,EAAqB,2MAYrBC,EAAe,yO,OCnDPC,E,4MACnBC,MAAQ,CACNjB,YAAa,I,EAGfkB,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEpB,YAAamB,EAAEE,cAAcC,MAAMC,iB,EAGrDC,aAAe,SAAAL,GACbA,EAAEM,iBAEoC,KAAlC,EAAKR,MAAMjB,YAAY0B,QAK3B,EAAKC,MAAMC,SAAS,EAAKX,MAAMjB,aAC/B,EAAKoB,SAAS,CAAEpB,YAAa,MAL3BM,K,4CAQJ,WACE,OACE,cAACK,EAAD,UACE,eAACC,EAAD,CAAYgB,SAAUC,KAAKL,aAA3B,UACE,cAACX,EAAD,CAAkBiB,KAAK,SAAvB,SACE,cAAChB,EAAD,uBAEF,cAACC,EAAD,CACEe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,cACLZ,MAAOO,KAAKZ,MAAMjB,YAClBmC,SAAUN,KAAKX,6B,GAnCYkB,aCThC,IAAMC,EAAI,yMAMJC,EAAK,kNCJH,SAASC,EAAT,GAAgE,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAC3D,OACE,cAACL,EAAD,UACE,cAACC,EAAD,CAAOK,IAAKF,EAAYG,IAAKJ,EAAMK,QAASH,MCL3C,IAAMI,EAAI,mPAYY,0MAMK,mNCfnB,SAASC,EAAT,GAAkD,IAA1BC,EAAyB,EAAzBA,OAAQN,EAAiB,EAAjBA,cAC7C,OACE,cAACI,EAAD,UACGE,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcX,EAArB,EAAqBA,KAAMY,EAA3B,EAA2BA,cAA3B,OACV,cAACb,EAAD,CAEEE,WAAYU,EACZX,KAAMA,EACNE,cAAe,kBAAMA,EAAcU,EAAeZ,KAH7CU,QCRR,IAAMG,EAAM,0kBCEJ,SAASC,EAAT,GAAsC,IAAZT,EAAW,EAAXA,QACvC,OACE,cAACQ,EAAD,CAAQvB,KAAK,SAASe,QAASA,EAA/B,uB,qBCJG,IAAMU,EAAe,kKCEb,SAASC,IACtB,OACE,cAACD,EAAD,UACE,cAAC,IAAD,CAAQzB,KAAK,YAAY2B,MAAM,UAAUC,OAAQ,IAAKC,MAAO,QCL5D,IAAMC,EAAY,wRAgBZC,EAAc,gNAYdvB,EAAK,oFCzBZwB,EAAYC,SAASC,cAAc,eAEpBC,E,4MAenBC,cAAgB,SAAA/C,GACC,WAAXA,EAAEgD,MACJ,EAAKxC,MAAMyC,W,EAIfC,oBAAsB,SAAAlD,GAChBA,EAAEmD,SAAWnD,EAAEE,eACjB,EAAKM,MAAMyC,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAW3C,KAAKqC,iB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAW5C,KAAKqC,iB,oBAe7C,WACE,MAA8BrC,KAAKF,MAA3B+C,EAAR,EAAQA,YAAalC,EAArB,EAAqBA,KAErB,OAAOmC,uBACL,cAACf,EAAD,CAAcf,QAAShB,KAAKwC,oBAA5B,SACE,cAACR,EAAD,UACE,cAAC,EAAD,CAAOlB,IAAK+B,EAAa9B,IAAKJ,QAGlCsB,O,GApC6B1B,aCGdwC,E,4MAGnB3D,MAAQ,CACNjB,YAAa,GACbC,KAAM,EACN+C,OAAQ,GACR0B,YAAa,KACb9B,IAAK,KACLiC,OAAQ,Q,EAiCVC,iBAAmB,SAAA9E,GACb,EAAKiB,MAAMjB,cAAgBA,IAI/B,EAAK+E,aACL,EAAK3D,SAAS,CAAEpB,kB,EAGlBgF,iBAAmB,WACjB,EAAK5D,UAAS,SAAA6D,GAAS,MAAK,CAC1BhF,KAAMgF,EAAUhF,KAAO,O,EAI3BiF,oBAAsB,SAACC,EAAe3C,GACpC,EAAKpB,SAAS,CACZsD,YAAaS,EACbvC,IAAKJ,K,EAIT4C,WAAa,WACX,EAAKhE,SAAS,CACZsD,YAAa,Q,EAIjBK,WAAa,WACX,EAAK3D,SAAS,CACZpB,YAAa,GACbC,KAAM,EACN+C,OAAQ,GACR0B,YAAa,KACb9B,IAAK,KACLiC,OAAQ,U,+FAjEZ,WAAyBQ,EAAGJ,GAA5B,qBAAAK,EAAA,2DACgCzD,KAAKZ,MAA3BjB,EADV,EACUA,YAAaC,EADvB,EACuBA,KAEjBgF,EAAUjF,cAAgBA,GAAeiF,EAAUhF,OAASA,EAHlE,wBAII4B,KAAKT,SAAS,CAAEyD,OAAQ,YAJ5B,kBAO2B9E,EAAIwF,UAAUvF,EAAaC,GAPtD,WAOY+C,EAPZ,QASkBwC,OATlB,sBAUc,IAAIC,MAVlB,OAaM5D,KAAKT,UAAS,SAAA6D,GAAS,MAAK,CAC1BjC,OAAO,GAAD,mBAAMiC,EAAUjC,QAAhB,YAA2BA,IACjC6B,OAAQ,eAfhB,kDbRAa,gBAAM,CACJlF,MAAO,kBACPC,KAAK,gCACLC,MAAO,MawBHmB,KAAKT,SAAS,CAAEyD,OAAQ,aAnB9B,QAsBIhD,KAAKZ,MAAMhB,KAAO,GAChBsE,OAAOoB,SAAS,CACdC,IAAK7B,SAAS8B,gBAAgBC,aAC9BC,SAAU,WAzBlB,0D,6EAqEA,WACE,MAA6ClE,KAAKZ,MAA1C+B,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,YAAa9B,EAA7B,EAA6BA,IAAKiC,EAAlC,EAAkCA,OAElC,MAAe,SAAXA,EACK,cAAC,EAAD,CAAWjD,SAAUC,KAAKiD,mBAGpB,YAAXD,EAEA,qCACE,cAAC,EAAD,CAAWjD,SAAUC,KAAKiD,mBAC1B,cAACtB,EAAD,IACA,cAACT,EAAD,CACEC,OAAQA,EACRN,cAAeb,KAAKqD,sBAErBlC,EAAOwC,OAAS,GACf,cAAClC,EAAD,CAAgBT,QAAShB,KAAKmD,sBAMvB,aAAXH,EAEA,qCACE,cAAC,EAAD,CAAWjD,SAAUC,KAAKiD,mBAC1B,cAAC/B,EAAD,CACEC,OAAQA,EACRN,cAAeb,KAAKqD,sBAErBR,GACC,cAAC,EAAD,CACEA,YAAaA,EACblC,KAAMI,EACNwB,QAASvC,KAAKuD,aAGjBpC,EAAOwC,OAAS,GACf,cAAClC,EAAD,CAAgBT,QAAShB,KAAKmD,sBAMvB,aAAXH,EAEA,mCACE,cAAC,EAAD,CAAWjD,SAAUC,KAAKiD,0BAHhC,M,GA9H6B1C,aCJjC4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,W","file":"static/js/main.63cbca8d.chunk.js","sourcesContent":["export const Pixabay = {\n  BASE_URL: 'https://pixabay.com/api/',\n  KEY: '21849965-5d080cd355a76516303a4dd69',\n};\n","import axios from 'axios';\nimport { Pixabay } from './Constants';\n\naxios.defaults.baseURL = Pixabay.BASE_URL;\n\nexport class Api {\n  static async getImages(searchQuery, page) {\n    const url = `?q=${searchQuery}&page=${page}&key=${Pixabay.KEY}&image_type=photo&orientation=horizontal&per_page=12\n        `;\n    const { data } = await axios.get(url);\n\n    return data.hits;\n  }\n}\n\n// async function fetchImages(searchQuery, page) {\n//     const url = `/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`\n//     const { data } = await axios.get(url);\n//     return data.hits;\n// }\n\n// export default fetchImages;\n","import { info, error } from '@pnotify/core';\nimport '@pnotify/core/dist/Material.css';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\n\nexport const onInfoNotification = () => {\n  info({\n    title: 'Invalid request',\n    text: `The search field is empty!`,\n    delay: 2000,\n  });\n};\n\nexport const onErrorNotification = () => {\n  error({\n    title: 'Invalid request',\n    text: `Please enter the right query!`,\n    delay: 2000,\n  });\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin-bottom: 25px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { onInfoNotification } from '../../Services/Notification';\nimport {\n  Header,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nexport default class SearchBar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.searchQuery.trim() === '') {\n      onInfoNotification();\n      return;\n    }\n\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    return (\n      <Header>\n        <SearchForm onSubmit={this.handleSubmit}>\n          <SearchFormButton type=\"submit\">\n            <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n          </SearchFormButton>\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images\"\n            name=\"searchQuery\"\n            value={this.state.searchQuery}\n            onChange={this.handleInputChange}\n          />\n        </SearchForm>\n      </Header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Image } from './ImageGalleryItem.styled';\n\nexport default function ImageGalleryItem({ tags, previewImg, selectedImage }) {\n  return (\n    <Item>\n      <Image src={previewImg} alt={tags} onClick={selectedImage} />\n    </Item>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  tags: PropTypes.string.isRequired,\n  previewImg: PropTypes.string.isRequired,\n  selectedImage: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  /* margin-bottom: 25px; */\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ImageGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGalleryItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport { List } from './ImageGallery.styled';\n\nexport default function ImageGallery({ images, selectedImage }) {\n  return (\n    <List>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          previewImg={webformatURL}\n          tags={tags}\n          selectedImage={() => selectedImage(largeImageURL, tags)}\n        />\n      ))}\n    </List>\n  );\n}\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  selectedImage: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 15px;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './LoadMoreButton.styled';\n\nexport default function LoadMoreButton({ onClick }) {\n  return (\n    <Button type=\"button\" onClick={onClick}>\n      Load more\n    </Button>\n  );\n}\n\nLoadMoreButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { LoaderContainer } from './Spinner.styled';\n\nexport default function Spinner() {\n  return (\n    <LoaderContainer>\n      <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={250} width={250} />\n    </LoaderContainer>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  margin-bottom: 20px;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70vw;\n  height: auto;\n  margin: auto;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n`;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ModalOverlay, ModalContainer, Image } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    selectedImg: PropTypes.string,\n    tags: PropTypes.string,\n    onClose: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { selectedImg, tags } = this.props;\n\n    return createPortal(\n      <ModalOverlay onClick={this.handleBackdropClick}>\n        <ModalContainer>\n          <Image src={selectedImg} alt={tags} />\n        </ModalContainer>\n      </ModalOverlay>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Api } from './Services/Api-service';\nimport { onErrorNotification } from './Services/Notification';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport LoadMoreButton from './Components/LoadMoreButton/LoadMoreButton';\nimport Spinner from './Components/Spinner/Spinner';\nimport Modal from './Components/Modal/Modal';\n\nexport default class App extends Component {\n  static propTypes = { searchQuery: PropTypes.string };\n\n  state = {\n    searchQuery: '',\n    page: 1,\n    images: [],\n    selectedImg: null,\n    alt: null,\n    status: 'idle',\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const { searchQuery, page } = this.state;\n\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.setState({ status: 'pending' });\n\n      try {\n        const images = await Api.getImages(searchQuery, page);\n\n        if (!images.length) {\n          throw new Error();\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          status: 'resolved',\n        }));\n      } catch (error) {\n        onErrorNotification();\n        this.setState({ status: 'rejected' });\n      }\n\n      this.state.page > 1 &&\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n    }\n  }\n\n  handleFormSubmit = searchQuery => {\n    if (this.state.searchQuery === searchQuery) {\n      return;\n    }\n\n    this.resetState();\n    this.setState({ searchQuery });\n  };\n\n  loadMoreBtnClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  handleSelectedImage = (largeImageUrl, tags) => {\n    this.setState({\n      selectedImg: largeImageUrl,\n      alt: tags,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      selectedImg: null,\n    });\n  };\n\n  resetState = () => {\n    this.setState({\n      searchQuery: '',\n      page: 1,\n      images: [],\n      selectedImg: null,\n      alt: null,\n      status: 'idle',\n    });\n  };\n\n  render() {\n    const { images, selectedImg, alt, status } = this.state;\n\n    if (status === 'idle') {\n      return <SearchBar onSubmit={this.handleFormSubmit} />;\n    }\n\n    if (status === 'pending') {\n      return (\n        <>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <Spinner />\n          <ImageGallery\n            images={images}\n            selectedImage={this.handleSelectedImage}\n          />\n          {images.length > 0 && (\n            <LoadMoreButton onClick={this.loadMoreBtnClick} />\n          )}\n        </>\n      );\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ImageGallery\n            images={images}\n            selectedImage={this.handleSelectedImage}\n          />\n          {selectedImg && (\n            <Modal\n              selectedImg={selectedImg}\n              tags={alt}\n              onClose={this.closeModal}\n            />\n          )}\n          {images.length > 0 && (\n            <LoadMoreButton onClick={this.loadMoreBtnClick} />\n          )}\n        </>\n      );\n    }\n\n    if (status === 'rejected') {\n      return (\n        <>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n        </>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}